#!/bin/sh -eux
TMP=$(mktemp -d)
: ${PRE_INSTALL_PKGS:='epel-release'}
: ${INSTALL_PKGS:='device-mapper-persistent-data lvm2 golang ebtables ethtool keepalived ntp rsync ansible socat python python-pip wget git net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct iscsi-initiator-utils yum-utils'}

cd $TMP
cat <<EOF > $TMP/inventory 
localhost ansible_connection=local

[nodes]
localhost

[primary-master]
localhost

[secondary-masters]
localhost

[masters]
localhost

[minions]
localhost

[nginx]
localhost

[nfs-server]
localhost
EOF

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system
iptables -F
iptables-save

wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install -y epel-release-latest-7.noarch.rpm

yum clean all
yum update -y
yum repolist enabled

yum install -y $PRE_INSTALL_PKGS
yum install -y $INSTALL_PKGS

swapoff --all

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
setenforce 0

# Install docker
  sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
  # sudo yum-config-manager --enable docker-ce-edge
  # sudo yum-config-manager --enable docker-ce-test
  #curl -fsSL https://get.docker.com/ | sh
  #yum install docker-ce
  yum install -y docker-ce-17.12.1.ce-1.el7.centos.x86_64
  yum install -y docker-compose-1.9.0-5.el7.noarch
  #yum install -y kubelet kubeadm kubectl
  yum install -y kubelet-1.9.1-0.x86_64 kubeadm-1.9.1-0.x86_64 kubectl-1.9.1-0.x86_64
  yum install -y etcd-3.2.7-1.el7
  echo 'Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"' \
    >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
#######

#edit /etc/sysconfig/docker file and add --insecure-registry 172.30.0.0/16 to the OPTIONS parameter.
sed -i '/OPTIONS=.*/c\OPTIONS="--selinux-enabled --insecure-registry 172.30.0.0/16"' \
 /etc/sysconfig/docker
systemctl enable docker
systemctl start docker
systemctl enable kubelet && systemctl start kubelet

pip install --upgrade pip
pip install docker-py

if [ "$KUBEADM_INSTALL" = "openshift" ]; then
  # leaving clean for now, let ansible initialize
  #yum install -y centos-release-openshift-origin origin-clients
  echo 'Sticking to default centos'
elif [ "$KUBEADM_INSTALL" = "kubespray" ]; then
  # leaving clean for now, let ansible initialize
  echo 'Sticking to default centos'
elif [ "$KUBEADM_INSTALL" = "kubeadm2ha" ]; then
  cd $TMP
  git clone --depth=1 https://github.com/joshuacox/kubeadm2ha.git
  cd kubeadm2ha/ansible
  systemctl restart docker
  ansible-playbook -i $TMP/inventory cluster-images.yaml
elif [ "$KUBEADM_INSTALL" = "kubeadm" ]; then
  #systemctl restart docker
  #kubeadm init
  #kubeadm reset
else
  # Defaults to nothing barebones
  echo 'barebone'
fi

export GOPATH=$HOME/.go
#go get github.com/kubernetes-incubator/cri-tools/cmd/crictl
#mv $HOME/go/bin/crictl /usr/local/bin/

echo 'PATH=/usr/local/bin:$PATH' >> /root/.bash_profile

# remove temp
cd
rm -Rf $TMP
