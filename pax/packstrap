#!/bin/sh -eux
TMP=$(mktemp -d)

cat <<EOF > $TMP/inventory 
localhost ansible_connection=local

[nodes]
localhost

[primary-master]
localhost

[secondary-masters]
localhost

[masters]
localhost

[minions]
localhost

[nginx]
localhost

[nfs-server]
localhost
EOF

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

echo 'export GOPATH=$HOME/.go
export PATH=${GOPATH//://bin:}/bin:$PATH' \
>> .bashrc

if [ "$KUBEADM_INSTALL" = "openshift" ]; then
  # leaving clean for now, let ansible initialize
  #yum install -y centos-release-openshift-origin origin-clients
  echo 'Sticking to defaults for openshift'
elif [ "$KUBEADM_INSTALL" = "kubespray" ]; then
  # leaving clean for now, let ansible initialize
  echo 'Sticking to defaults for kubespray'
elif [ "$KUBEADM_INSTALL" = "kubeadm2ha" ]; then
  cd $TMP
  git clone --depth=1 https://github.com/joshuacox/kubeadm2ha.git
  cd kubeadm2ha
  ansible_playbook -i $TMP/inventory cluster-images.yaml
elif [ "$KUBEADM_INSTALL" = "kubeadm" ]; then
  curl https://raw.githubusercontent.com/joshuacox/roustabout/master/KubadmNstall|bash
  swapoff --all
  kubeadm init
  kubeadm reset
else
  echo 'Sticking to defaults'
fi

## Show IP address in /etc/issue
cat << EOF > /usr/local/bin/get-ip-address
#!/bin/bash
echo -n 'IP address = '
/sbin/ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{ print \$2 }' | awk -F: '{ print \$2 }'
echo -n 'SSH is on port: '
grep Port /etc/ssh/sshd_config 
EOF

chmod +x /usr/local/bin/get-ip-address

cat << EOF > /etc/network/if-up.d/show-ip-address
#!/bin/sh
if [ "\$METHOD" = loopback ]; then
    exit 0
fi

# Only run from ifup.
if [ "\$MODE" != start ]; then
    exit 0
fi

cp /etc/issue-standard /etc/issue
/usr/local/bin/get-ip-address >> /etc/issue
echo "" >> /etc/issue
EOF

chmod +x /etc/network/if-up.d/show-ip-address
